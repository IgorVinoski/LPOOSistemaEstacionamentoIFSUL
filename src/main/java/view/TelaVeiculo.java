/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import dao.PersistenciaJPA;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.TipoVeiculo;
import model.VeiOficial;
import model.Veiculo;
import view.TelaCadastroVeiculo;

/**
 *
 * @author igor
 */
public class TelaVeiculo extends javax.swing.JFrame {
    private PersistenciaJPA persistenciaJPA;
    /**
     * Creates new form TelaVeiculo
     */
    public TelaVeiculo() {
        initComponents();
        persistenciaJPA = new PersistenciaJPA();
        atualizarTabelaVeiculos();
        
            cmbVeiculoOficial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {
        "Todos os Veículos", 
        "Veículos Oficiais"
    }));
    }
private void atualizarTabelaVeiculos() {
    try {
        // Obtendo o texto digitado no campo de busca
        String placaFiltro = txtPlaca.getText().trim();
        boolean filtrarOficiais = cmbVeiculoOficial.getSelectedItem().equals("Veículos Oficiais");

        // Query base
        String query = "SELECT v FROM Veiculo v WHERE 1=1";
        
        // Adiciona filtro por placa, se houver texto digitado
        if (!placaFiltro.isEmpty()) {
            query += " AND v.placa LIKE :placa";
        }
        
        // Adiciona filtro para veículos oficiais
        if (filtrarOficiais) {
            query += " AND TYPE(v) = VeiOficial"; // Filtra pela subclasse VeiOficial
        }

        // Criação da query
        var q = persistenciaJPA.getEntityManager().createQuery(query, Veiculo.class);
        
        // Configura parâmetros, se necessário
        if (!placaFiltro.isEmpty()) {
            q.setParameter("placa", "%" + placaFiltro + "%");
        }

        // Executa a query e preenche a tabela
        List<Veiculo> veiculos = q.getResultList();

        DefaultTableModel model = (DefaultTableModel) tblVeiculos.getModel();
        model.setRowCount(0); // Limpa os dados da tabela

        for (Veiculo veiculo : veiculos) {
            model.addRow(new Object[]{
                veiculo.getPlaca(),
                veiculo.getProprietario() != null ? veiculo.getProprietario().getNome() : "Sem proprietário",
                veiculo instanceof VeiOficial ? "Oficial" : "Particular"
            });
        }
    } catch (Exception e) {
        System.err.println("Erro ao atualizar tabela de veículos: " + e.getMessage());
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblVeiculos = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtPlaca = new javax.swing.JTextPane();
        cmbVeiculoOficial = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Placa", "Proprietrioá", "Oficial"
            }
        ));
        jScrollPane1.setViewportView(tblVeiculos);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jLabel1.setText("Placa:");

        txtPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPlacaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtPlaca);

        cmbVeiculoOficial.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbVeiculoOficial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVeiculoOficialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmbVeiculoOficial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnNovo)
                            .addGap(64, 64, 64)
                            .addComponent(btnEditar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemover))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbVeiculoOficial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnEditar)
                    .addComponent(btnRemover)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        // TODO add your handling code here:
           TelaCadastroVeiculo telaCadastroVeiculo = new TelaCadastroVeiculo();
        telaCadastroVeiculo.setVisible(true);
                telaCadastroVeiculo.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                atualizarTabelaVeiculos();
            }
        });
    
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblVeiculos.getSelectedRow();
               if (selectedRow >= 0) {
                   String placa = (String) tblVeiculos.getValueAt(selectedRow, 0);
                   try {
                       Veiculo veiculo = persistenciaJPA.getEntityManager()
                               .createQuery("SELECT v FROM Veiculo v WHERE v.placa = :placa", Veiculo.class)
                               .setParameter("placa", placa)
                               .getSingleResult();

                       persistenciaJPA.remover(veiculo);
                       atualizarTabelaVeiculos();
                   } catch (Exception e) {
                       System.err.println("Erro ao remover veículo: " + e.getMessage());
                   }
               } else {
                   System.out.println("Nenhuma linha selecionada!");
               }
           
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtPlacaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaKeyReleased
        // TODO add your handling code here:
            atualizarTabelaVeiculos();
    }//GEN-LAST:event_txtPlacaKeyReleased

    private void cmbVeiculoOficialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVeiculoOficialActionPerformed
        // TODO add your handling code here:
            atualizarTabelaVeiculos();
    }//GEN-LAST:event_cmbVeiculoOficialActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
    int selectedRow = tblVeiculos.getSelectedRow();
    if (selectedRow >= 0) {
        String placa = (String) tblVeiculos.getValueAt(selectedRow, 0);
        try {
            Veiculo veiculo = persistenciaJPA.getEntityManager()
                    .createQuery("SELECT v FROM Veiculo v WHERE v.placa = :placa", Veiculo.class)
                    .setParameter("placa", placa)
                    .getSingleResult();

            // Abrir a tela de edição passando o veículo
            TelaCadastroVeiculo telaCadastroVeiculo = new TelaCadastroVeiculo(veiculo);
            telaCadastroVeiculo.setVisible(true);
            telaCadastroVeiculo.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosed(java.awt.event.WindowEvent e) {
                    atualizarTabelaVeiculos();
                }
            });
        } catch (Exception e) {
            System.err.println("Erro ao editar veículo: " + e.getMessage());
        }
    } else {
        System.out.println("Nenhuma linha selecionada!");
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVeiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVeiculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JComboBox<String> cmbVeiculoOficial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblVeiculos;
    private javax.swing.JTextPane txtPlaca;
    // End of variables declaration//GEN-END:variables
}
